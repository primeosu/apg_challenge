<?php
namespace App\Controller;

use App\Controller\AppController;
use Cake\ORM\TableRegistry;
use Cake\Datasource\ConnectionManager;

/**
 * Malware Controller
 *
 * @property \App\Model\Table\MalwareTable $Malware
 */
class MalwareController extends AppController
{

    /**
     * Index method
     *
     * @return \Cake\Network\Response|null
     */
    public function index()
    {
        $malware = $this->paginate($this->Malware);

        $this->set(compact('malware'));
        $this->set('_serialize', ['malware']);
    }

    /**
     * View method
     *
     * @param string|null $id Malware id.
     * @return \Cake\Network\Response|null
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $malware = $this->Malware->get($id, [
            'contain' => []
        ]);

        $this->set('malware', $malware);
        $this->set('_serialize', ['malware']);
    }

    /**
     * Add method
     *
     * @return \Cake\Network\Response|void Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
        $malware = $this->Malware->newEntity();
        if ($this->request->is('post')) {
            $malware = $this->Malware->patchEntity($malware, $this->request->data);
            if ($this->Malware->save($malware)) {
                $this->Flash->success(__('The malware has been saved.'));
                return $this->redirect(['action' => 'index']);
            } else {
                $this->Flash->error(__('The malware could not be saved. Please, try again.'));
            }
        }
        $this->set(compact('malware'));
        $this->set('_serialize', ['malware']);
    }

    /**
     * Edit method
     *
     * @param string|null $id Malware id.
     * @return \Cake\Network\Response|void Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Network\Exception\NotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $malware = $this->Malware->get($id, [
            'contain' => []
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $malware = $this->Malware->patchEntity($malware, $this->request->data);
            if ($this->Malware->save($malware)) {
                $this->Flash->success(__('The malware has been saved.'));
                return $this->redirect(['action' => 'index']);
            } else {
                $this->Flash->error(__('The malware could not be saved. Please, try again.'));
            }
        }
        $this->set(compact('malware'));
        $this->set('_serialize', ['malware']);
    }

    /**
     * Delete method
     *
     * @param string|null $id Malware id.
     * @return \Cake\Network\Response|null Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $malware = $this->Malware->get($id);
        if ($this->Malware->delete($malware)) {
            $this->Flash->success(__('The malware has been deleted.'));
        } else {
            $this->Flash->error(__('The malware could not be deleted. Please, try again.'));
        }
        return $this->redirect(['action' => 'index']);
    }

    /**
    *Gets file from user to parse and stores in database
    */
    public function fileupload()
    {
      $header = array("md5","ClassificationName","ClassificationType","Size","FileType");
      $servername = "localhost";
      $username = "root";
      $password = "";
      $db = "malwaredatabase";

      // Create connection
      $conn = ConnectionManager::get('default');
      //Access malware table
      $malwareTable = TableRegistry::get('Malware');


      $malware = $this->paginate($this->Malware);
      $this->set(compact('malware'));

      //open file if clicked upload button
      if(isset($_POST["uploadSubmit"])){
        $path = fopen($_FILES['fileToUploadPath']['tmp_name'], 'r');

        #Skips header line if file exist
        fgetcsv($path);
        while ( ($data = fgetcsv($path,0,",")) !== false) {
          //Create malware entity to store data
          $malwareEntity = $malwareTable->newEntity($this->request->data());
          $num = count($data);
          $md5 = print_r($data[0],true);
          $cn = $data[1];
          $ct = $data[2];
          $size = $data[3];
          $ft = $data[4];

          $malwareEntity->md5 = $md5;
          $malwareEntity->ClassificationName = $cn;
          $malwareEntity->ClassificationType = $ct;
          $malwareEntity->Size = $size;
          $malwareEntity->FileType = $ft;
          //Store info for entity
          $malwareTable->save($malwareEntity);
        }

        $query = $malwareTable->find();
        $query -> select(['classificationType', 'count' =>$query->func()->count('ClassificationType')])
              -> group('ClassificationType');
        //Store result of query in array
        $classTypeArray = array();
        foreach ($query as $row){
          $classTypeArray[$row['classificationType']]=$row['count'];
          $this->set('classTypeArray',$classTypeArray);
        }

      }
    }
}
