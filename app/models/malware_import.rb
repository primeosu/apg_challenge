class MalwareImport < ActiveRecord::Base
  include Importable

  has_many :malware

  attachment :file, extension: 'csv'

  validates :file, presence: true

  scope :imported, ->{ where(imported: true) }
  scope :not_imported, ->{ where(imported: false) }

  after_create :import_malware

  protected

  def import_malware
    csv_file = self.file.download

    import_from_csv(csv_file) { |row|
      row.merge!({malware_import: self})
      CsvRowToMalware.new(row).import_malware
    }
  end

  class CsvRowToMalware

    attr_reader :row

    def initialize(row)
      @row = row
    end

    def malware_import
      row[:malware_import]
    end

    def classification_type_params
      { name: row[:classificationtype] }
    end

    def classification_type
      ClassificationType.where(classification_type_params).first_or_create
    end

    def classification_params
      { name: row[:classificationname], classification_type: classification_type }
    end

    def classification
      Classification.where(classification_params).first_or_create
    end

    def file_type_params
      { name: row[:filetype] }
    end

    def file_type
      FileType.where(file_type_params).first_or_create
    end

    def malware_params
      {
          md5: row[:md5],
          size: row[:size],
          classification: classification,
          file_type: file_type,
          malware_import: malware_import
      }
    end

    def malware
      Malware.create(malware_params)
    end

    def import_malware
      malware
    end
  end


end